# Generated by Django 5.2.4 on 2025-08-15 10:16

import django.core.validators
import django.db.models.deletion
import shortuuidfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mysessions', '0003_remove_mysession_days_of_week_mysession_days'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('start_start_date', models.DateField()),
                ('end_start_date', models.DateField()),
                ('gym_fee', models.DecimalField(decimal_places=0, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MembershipPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('start_start_date', models.DateField()),
                ('end_start_date', models.DateField()),
                ('gym_fee', models.DecimalField(decimal_places=0, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('type', models.CharField(choices=[('year', 'Year'), ('month', 'Month')], max_length=5)),
                ('price', models.DecimalField(blank=True, decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NutritionPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('start_start_date', models.DateField()),
                ('end_start_date', models.DateField()),
                ('gym_fee', models.DecimalField(decimal_places=0, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_day', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SportHistoryPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', shortuuidfield.fields.ShortUUIDField(blank=True, editable=False, max_length=22, unique=True)),
                ('price_per_day', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
            ],
        ),
        migrations.CreateModel(
            name='ClassPricingItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_capacity', models.PositiveSmallIntegerField()),
                ('max_capacity', models.PositiveSmallIntegerField()),
                ('price_per_hour', models.DecimalField(blank=True, decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_start_date', models.DateField()),
                ('end_start_date', models.DateField()),
                ('gym_fee', models.DecimalField(decimal_places=0, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('pricing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pricing.classpricing')),
                ('seesion_ref', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pricingitems', to='mysessions.mysession')),
            ],
        ),
        migrations.AddField(
            model_name='classpricing',
            name='session_ref',
            field=models.ManyToManyField(related_name='picing', through='pricing.ClassPricingItem', to='mysessions.mysession'),
        ),
    ]
